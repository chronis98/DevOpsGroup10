name: Deploy to Elastic Beanstalk

on:
  push:
    branches:
      - 'operations'
  pull_request:
    branches:
      - 'operations'

env:
  ECR_REGISTRY: 528775740130.dkr.ecr.us-east-1.amazonaws.com
  ECR_REPOSITORY: devopsgroup10projectdev
  ECS_SERVICE: gymcheck-deploy-service
  ECS_CLUSTER: gymcheck_development
  ECS_TASK_DEFINITION: ./task-definition.json
  CONTAINER_NAME: gymcheck-dev
  AWS_REGION: us-east-1
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}  
  EB_APPLICATION_NAME: GymCheck
  EB_ENVIRONMENT_NAME: Gymcheck-env

jobs:
  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    environment: production

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@13d241b293754004c80624b5567555c4a39ffbe3
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@aaf69d68aa3fb14c1d5a6be9ac61fe15b48453a2

      - name: Build, tag, and push image to Amazon ECR
        id: build-image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          IMAGE_TAG: ${{ github.sha }}
        run: |
          # Build a docker container and
          # push it to ECR so that it can
          # be deployed to ECS.
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
          echo "image=$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG" >> $GITHUB_OUTPUT

      name: Get latest ECR image tag
        id: ecr
        uses: aws-actions/amazon-ecr-login@v1
      
      - name: Deploy to Elastic Beanstalk
        uses: einaregilsson/beanstalk-deploy@v19
        with:
          aws-region: ${{ env.AWS_REGION }}
          application-name: ${{ env.EB_APPLICATION_NAME }}
          environment-name: ${{ env.EB_ENVIRONMENT_NAME }}
          version-label: ${{ steps.ecr.outputs.imageTag }}
          package: './*'
          ignore-warnings: true
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}